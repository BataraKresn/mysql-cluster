services:
  mysql-primary:
    image: mysql:8.0.42
    container_name: mysql-primary
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 2fF2P7xqVtc4iCExR
    command: >
      --server-id=1
      --log-bin=mysql-bin
      --binlog-do-db=appdb
      --binlog-do-db=db-mpp
      --default-authentication-plugin=mysql_native_password
    volumes:
      - ./primary-data:/var/lib/mysql
      - ./init/init-primary.sql:/docker-entrypoint-initdb.d/init.sql
      - ./primary-cnf/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      mysqlnet:
        ipv4_address: 172.20.0.10
    # Port tidak di-expose karena akses lewat ProxySQL

  mysql-replica:
    image: mysql:8.0.42
    container_name: mysql-replica
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 2fF2P7xqVtc4iCExR
    command: >
      --server-id=2
      --relay-log=relay-log
      --read-only=1
      --default-authentication-plugin=mysql_native_password
    volumes:
      - ./replicat-data:/var/lib/mysql
      - ./init/init-replica.sql:/docker-entrypoint-initdb.d/init.sql
      - ./replicat-cnf/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      mysqlnet:
        ipv4_address: 172.20.0.11
    depends_on:
      - mysql-primary

  proxysql:
    image: severalnines/proxysql:2.0
    container_name: proxysql
    ports:
      - "6033:6033"
      - "6032:6032"
      - "6080:6080"  # ProxySQL Web UI
    volumes:
      - ./proxysql/proxysql.cnf:/etc/proxysql.cnf
    networks:
      mysqlnet:
        ipv4_address: 172.20.0.12
    depends_on:
      - mysql-primary
      - mysql-replica

  # ProxySQL Web Interface - using nginx with custom web interface
  proxysql-web:
    image: nginx:alpine
    container_name: proxysql-web
    ports:
      - "8080:80"
    volumes:
      - ./proxysql-web:/usr/share/nginx/html
      - ./proxysql-web/nginx.conf:/etc/nginx/nginx.conf
    networks:
      mysqlnet:
        ipv4_address: 172.20.0.15
    depends_on:
      - proxysql

  # Custom Web Dashboard with Flask Backend
  mysql-dashboard:
    build: 
      context: ./web-ui
      dockerfile: Dockerfile
    container_name: mysql-dashboard
    ports:
      - "5000:5000"  # Flask API and Web Interface
    environment:
      - FLASK_ENV=production
      - PROXYSQL_HOST=proxysql
      - MYSQL_PRIMARY_HOST=mysql-primary
      - MYSQL_REPLICA_HOST=mysql-replica
    volumes:
      - ./web-ui/logs:/app/logs
      - ./web-ui/backups:/app/backups
      - /var/run/docker.sock:/var/run/docker.sock  # For docker commands
    networks:
      mysqlnet:
        ipv4_address: 172.20.0.20
    depends_on:
      - proxysql
      - mysql-primary
      - mysql-replica
    restart: unless-stopped

networks:
  mysqlnet:
    name: mysqlnet
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
